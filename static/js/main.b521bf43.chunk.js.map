{"version":3,"sources":["assets/loading.gif","AppState.js","utils/cookieUtil.js","api/shibeAPI.js","components/NavBar.js","components/ImageItem.js","global/constants.js","utils/placeholderHeightGenerator.js","components/ImageList.js","components/Gallery.js","components/NewPhotosView.js","components/FavouritesView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppState","Object","toConsumableArray","this","imageURLs","concat","Range","placeholdersCount","map","_","observable","Set","match","document","cookie","length","JSON","parse","readFavouritesCookie","action","_this","replace","_this2$imageURLs","_this2","push","apply","_this3","favourites","data","_this4","stringify","favourite","_this5","setFavourites","add","_this6","delete","computed","count","_this7","setPlaceholdersCount","axios","get","getImageURLs","then","_ref","addImageURLs","withRouter","inject","_ref2","appState","observer","location","react_default","a","createElement","className","href","label","path","size","item","key","pathname","Link","to","ImageItemStyled","styled","div","_templateObject","ImageItem","_Component","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onImageLoad","target","setState","isImageLoaded","imageHeight","clientHeight","onMouseOver","mouseOver","onMouseOut","state","message","undoVisible","undoAction","addToFavourites","image","removeFromFavourites","timer","clearTimeout","setTimeout","primaryButtonVisible","inherits","createClass","value","_this$props","_this$state","isFavourite","includes","style","height","alt","src","decoding","onLoad","type","onClick","role","aria-label","Component","LIST_MARGIN","MIN_COLUMN_WIDTH","placeholderHeightGenerator","results","next","Math","floor","random","ImageListStyled","ul","ImageList_templateObject","loadingGif","ImageList","arguments","list","columnWidth","i","components_ImageItem","PhotosViewStyled","Gallery_templateObject","Gallery","getMinColumnHeight","columns","listContainerRef","current","childNodes","minHeight","Infinity","min","onScroll","scrollPosition","window","pageYOffset","documentElement","scrollTop","innerHeight","requestMoreImages","onResize","columnsCount","clientWidth","actualColumnWidth","createRef","initialized","addEventListener","infinite","removeEventListener","images","title","imagesByColumn","List","forEach","elem","ref","ImageList_ImageList","Gallery_Gallery","toJS","AppStyled","App_templateObject","App","index_module","components_NavBar","Switch","Route","exact","component","NewPhotosView","FavouritesView","Boolean","hostname","ReactDOM","render","BrowserRouter","basename","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b521bf43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.e404159f.gif\";","import { observable, action, computed } from 'mobx';\nimport { Range, Set } from 'immutable';\nimport { getImageURLs } from './api/shibeAPI';\nimport {\n  storeFavouritesCookie,\n  readFavouritesCookie,\n} from './utils/cookieUtil';\nclass AppState {\n  @observable imageURLs = [];\n  @observable placeholdersCount = 0;\n\n  @observable favourites = new Set(readFavouritesCookie() || []);\n\n  @action\n  setImageURLs = imageURLs => {\n    this.imageURLs.replace(imageURLs);\n  };\n\n  @action addImageURLs = imageURLs => {\n    this.imageURLs.push(...imageURLs);\n  };\n\n  @action setPlaceholdersCount = placeholdersCount => {\n    this.placeholdersCount = placeholdersCount;\n  };\n\n  @action setFavourites = favourites => {\n    this.favourites = favourites;\n    storeFavouritesCookie(favourites);\n  };\n  @action addToFavourites = favourite => {\n    this.setFavourites(this.favourites.add(favourite));\n  };\n\n  @action removeFromFavourites = favourite => {\n    this.setFavourites(this.favourites.delete(favourite));\n  };\n\n  @computed get images() {\n    return [\n      ...this.imageURLs,\n      ...Range(0, this.placeholdersCount).map(_ => ''),\n    ];\n  }\n\n  @action\n  requestMoreImages = count => {\n    this.setPlaceholdersCount(this.placeholdersCount + count);\n    getImageURLs(count).then(({ data }) => {\n      this.setPlaceholdersCount(this.placeholdersCount - count);\n      this.addImageURLs(data);\n    });\n  };\n}\n\nexport { AppState };\n","export const readFavouritesCookie = () => {\n    const match = document.cookie.match(/shibe-dogs-elite=([^;]*)/);\n    if (match !== null && match.length > 0) {\n        return JSON.parse(match[1]);\n    }\n    return null;\n}\nexport const storeFavouritesCookie = data => document.cookie = `shibe-dogs-elite=${JSON.stringify(data)}`;","import axios from 'axios';\nexport const getImageURLs = count => axios.get(`https://cors.io/?https://shibe.online/api/shibes?count=${count}`);","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nexport const NavBar = ({ location, favourites }) => (\n  <nav className=\"navbar sticky-top navbar-light bg-light navbar-expand\">\n    <a className=\"navbar-brand\" href=\"/\">\n      Infinite Scroll Demo\n    </a>\n    <div className=\"collapse navbar-collapse\">\n      <ul className=\"navbar-nav\">\n        {[\n          { label: 'New Photos', path: '/' },\n          { label: `Favourites (${favourites.size})`, path: '/favourites' },\n        ].map(item => (\n          <li\n            key={item.label}\n            className={`nav-item ${location.pathname === item.path &&\n              'active'}`}\n          >\n            <Link className=\"nav-link\" to={item.path}>\n              {item.label}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default withRouter(\n  inject(({ appState }) => ({\n    favourites: appState.favourites,\n  }))(observer(NavBar))\n);\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport styled from '@emotion/styled';\n\nconst ImageItemStyled = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  .image {\n    opacity: 0;\n    position: absolute;\n  }\n\n  .image--loaded {\n    opacity: 1;\n    transition: opacity 0.5s;\n  }\n\n  .overlay {\n    position: absolute;\n    top: 50%;\n    width: 100%;\n    height: 40%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    opacity: 1;\n\n    background: rgba(255, 255, 255, 0.9);\n\n    transition: opacity 0.2s;\n    transform: translateY(-50%);\n  }\n\n  .overlay--hidden {\n    opacity: 0;\n  }\n\n  .primary-button--hidden {\n    display: none;\n  }\n\n  .message {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .message--hidden {\n    display: none;\n  }\n\n  .favourites-indicator {\n    position: absolute;\n    bottom: 12px;\n    right: 12px;\n    transition: opacity 0.5s 0.2s;\n  }\n\n  .favourites-indicator--hidden {\n    opacity: 0;\n  }\n`;\n\nexport class ImageItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isImageLoaded: false,\n      mouseOver: false,\n      message: '',\n      primaryButtonVisible: false,\n      imageHeight: 0,\n    };\n  }\n\n  componentWillUnmount() {\n      if (this.timer) {\n          clearTimeout(this.timer);\n      }\n  }\n  onImageLoad = ({ target }) => {\n    this.setState({ isImageLoaded: true , imageHeight: target.clientHeight});\n  };\n\n  onMouseOver = () => {\n    this.setState({ mouseOver: true });\n  };\n\n  onMouseOut = () => {\n    if (!this.state.message) {\n      this.setState({\n        mouseOver: false,\n        message: '',\n        undoVisible: false,\n        undoAction: null,\n      });\n    }\n  };\n\n  addToFavourites = () => {\n    this.props.addToFavourites(this.props.image);\n    this.setState({\n      message: 'Added to favourites!',\n      undoAction: this.removeFromFavourites,\n    });\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    this.timer = setTimeout(() => {\n      this.setState({\n        mouseOver: false,\n        message: '',\n        undoVisible: false,\n        undoAction: null,\n        primaryButtonVisible: false,\n      });\n    }, 2000);\n  };\n\n  removeFromFavourites = () => {\n    this.props.removeFromFavourites(this.props.image);\n    this.setState({\n      message: 'Removed from favourites.',\n      undoAction: this.addToFavourites,\n    });\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    this.timer = setTimeout(() => {\n      this.setState({\n        mouseOver: false,\n        message: '',\n        undoVisible: false,\n        undoAction: null,\n        primaryButtonVisible: false,\n      });\n    }, 2000);\n  };\n\n  render() {\n    const { image, favourites } = this.props;\n    const { mouseOver, isImageLoaded, imageHeight } = this.state;\n    const isFavourite = favourites.includes(this.props.image);\n    return (\n      <ImageItemStyled\n        onMouseOver={this.onMouseOver}\n        onMouseOut={this.onMouseOut}\n        style={{height: imageHeight || this.props.height}}\n      >\n        {!image ? (\n          <div className=\"image-placeholder\" />\n        ) : (\n          <img\n            className={`image ${isImageLoaded && 'image--loaded'}`}\n            alt=\"Shibe dog\"\n            src={image}\n            decoding=\"async\"\n            onLoad={this.onImageLoad}\n          />\n        )}\n        <div className={`overlay ${!mouseOver && 'overlay--hidden'}`}>\n          <button\n            type=\"button\"\n            className={`btn btn-outline-primary primary-button ${this.state\n              .message && 'primary-button--hidden'}`}\n            onClick={\n              isFavourite ? this.removeFromFavourites : this.addToFavourites\n            }\n          >\n            {isFavourite ? '💔 Remove from Favourites' : '❤️ Add to Favourites'}\n          </button>\n          <div\n            className={`message ${!this.state.message && 'message--hidden'}`}\n          >\n            <span>{this.state.message}</span>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary btn-sm\"\n              onClick={this.state.undoAction}\n            >\n              Undo\n            </button>\n          </div>\n        </div>\n        <div\n          className={`favourites-indicator ${!isFavourite &&\n            'favourites-indicator--hidden'}`}\n        >\n          <span role=\"img\" aria-label=\"favourite\">\n            ❤️\n          </span>\n          ️\n        </div>\n      </ImageItemStyled>\n    );\n  }\n}\n\nexport default inject(({ appState }) => ({\n  favourites: appState.favourites,\n  addToFavourites: appState.addToFavourites,\n  removeFromFavourites: appState.removeFromFavourites,\n}))(observer(ImageItem));\n","export const MIN_LIST_WIDTH = 300;\nexport const LIST_MARGIN = 6;\nexport const MIN_COLUMN_WIDTH = MIN_LIST_WIDTH + 2 * LIST_MARGIN;","export const placeholderHeightGenerator = (() => {\n  const results = [0.75, 1, 1, 1.33];\n  return {\n    next: () => results[Math.floor(Math.random() * 4)],\n  };\n})();\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport ImageItem from './ImageItem';\nimport { LIST_MARGIN } from '../global/constants';\nimport loadingGif from '../assets/loading.gif';\nimport { placeholderHeightGenerator } from '../utils/placeholderHeightGenerator';\n\nconst ImageListStyled = styled.ul`\n  .image-list--item {\n    background-image: url(${loadingGif});\n    background-color: lightgray;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-blend-mode: multiply;\n\n    margin: ${LIST_MARGIN}px 0;\n    transition: height 0.2s;\n  }\n`;\nexport class ImageList extends Component {\n  render() {\n    const { list, columnWidth } = this.props;\n    return (\n      <ImageListStyled className=\"image-list\">\n        {list.map((image, i) => (\n          <li\n            className=\"image-list--item\"\n            key={`${image || 'placeholder'}-${i}`}\n          >\n            <ImageItem\n              image={image}\n              height={placeholderHeightGenerator.next() * columnWidth}\n            />\n          </li>\n        ))}\n      </ImageListStyled>\n    );\n  }\n}\n","import React, { Component, createRef } from 'react';\nimport { List, Range } from 'immutable';\nimport styled from '@emotion/styled';\nimport { ImageList } from './ImageList';\nimport { LIST_MARGIN, MIN_COLUMN_WIDTH } from '../global/constants';\n\nconst PhotosViewStyled = styled.div`\n  .image-list-container {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n  }\n\n  .image-list {\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    flex-basis: 50%;\n    padding: 0;\n    margin: 0 ${LIST_MARGIN}px;\n  }\n\n  .image {\n    width: 100%;\n    object-fit: cover;\n  }\n\n  .image-placeholder {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport class Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.listContainerRef = createRef();\n    this.state = {\n      initialized: false,\n      columnsCount: 0,\n      actualColumnWidth: 0,\n    };\n  }\n\n  getMinColumnHeight = () => {\n    const columns = this.listContainerRef.current.childNodes;\n    if (columns && columns.length > 0) {\n      let minHeight = Infinity;\n      for (let i = 0; i < columns.length; i++) {\n        minHeight = Math.min(minHeight, columns[i].clientHeight);\n      }\n      return minHeight;\n    }\n    return 0;\n  };\n\n  onScroll = () => {\n    const scrollPosition =\n      window.pageYOffset || document.documentElement.scrollTop;\n    if (this.getMinColumnHeight() < window.innerHeight + scrollPosition) {\n      this.props.requestMoreImages(16);\n    }\n  };\n\n  onResize = () => {\n    const columnsCount = Math.floor(\n      this.listContainerRef.current.clientWidth / MIN_COLUMN_WIDTH\n    );\n    const actualColumnWidth =\n      this.listContainerRef.current.clientWidth / columnsCount -\n      2 * LIST_MARGIN;\n    this.setState({\n      columnsCount,\n      actualColumnWidth,\n    });\n  };\n\n  componentDidMount() {\n    if (!this.state.initialized) {\n      window.addEventListener('resize', this.onResize);\n      this.onResize();\n\n      if (this.props.infinite) {\n        window.addEventListener('scroll', this.onScroll);\n        this.onScroll();\n      }\n\n      this.setState({ initialized: true });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize',this.onResize);\n\n    if (this.props.infinite) {\n      window.removeEventListener('scroll', this.onScroll);\n    }\n  }\n\n  render() {\n    const { columnsCount, actualColumnWidth } = this.state;\n    const { images, title } = this.props;\n    const imagesByColumn = List(Range(0, columnsCount).map(_ => []));\n    \n    if (columnsCount && actualColumnWidth) {\n      images.forEach((elem, i) => {\n        imagesByColumn.get(i % columnsCount).push(elem)\n      });\n    }\n    return (\n      <PhotosViewStyled>\n        <div className=\"row\">\n          <div className=\"col\">\n          <h1>{title}</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col image-list-container\" ref={this.listContainerRef}>\n            {imagesByColumn.map((list, i) => (\n              <ImageList\n                key={`list-${i}-of-${columnsCount}`}\n                list={list}\n                columnWidth={actualColumnWidth}\n              />\n            ))}\n          </div>\n        </div>\n      </PhotosViewStyled>\n    );\n  }\n}\n","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Gallery } from './Gallery';\n\nexport const NewPhotosView = ({ images, requestMoreImages }) => (\n  <Gallery\n    infinite\n    title=\"New Photos\"\n    images={images}\n    requestMoreImages={requestMoreImages}\n  />\n);\n\nexport default inject(({ appState }) => ({\n  images: appState.images,\n  requestMoreImages: appState.requestMoreImages,\n}))(observer(NewPhotosView));\n","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Gallery } from './Gallery';\n\nexport const FavouritesView = ({ favourites }) => (\n  <Gallery title=\"Favourites\" images={favourites.toJS()} />\n);\n\nexport default inject(({ appState }) => ({\n  favourites: appState.favourites,\n}))(observer(FavouritesView));\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport styled from '@emotion/styled';\nimport { AppState } from './AppState';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport NewPhotosView from './components/NewPhotosView';\nimport FavouritesView from './components/FavouritesView';\n\nconst AppStyled = styled.div`\n  .main {\n    padding-top: 56px;\n  }\n`;\n\nconst appState = new AppState();\n\nexport const App = () => (\n  <Provider appState={appState}>\n    <AppStyled className=\"App\">\n      <NavBar />\n      <div className=\"main container\">\n        <Switch>\n          <Route exact path=\"/\" component={NewPhotosView} />\n          <Route exact path=\"/favourites\" component={FavouritesView} />\n        </Switch>\n      </div>\n    </AppStyled>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/infinite-scroll\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}