{"version":3,"sources":["assets/loading.gif","global/constants.js","AppState.js","utils/cookieUtil.js","api/shibeAPI.js","components/NavBar.js","components/Gallery/ImageItem/FavouritesIndicator.js","components/Gallery/ImageItem/FavouritesButton.js","components/Gallery/ImageItem/ImageItem.js","utils/placeholderHeightGenerator.js","components/Gallery/ImageList.js","components/Gallery/GalleryTitle.js","components/Gallery/Gallery.js","components/NewPhotosView.js","components/FavouritesView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LIST_MARGIN","MIN_COLUMN_WIDTH","AppState","Object","toConsumableArray","this","imageURLs","concat","Array","placeholdersCount","fill","observable","Set","match","document","cookie","length","JSON","parse","readFavouritesCookie","action","_this","replace","_this2$imageURLs","_this2","push","apply","_this3","favourites","data","_this4","stringify","favourite","_this5","setFavourites","add","_this6","delete","computed","count","arguments","undefined","_this7","setPlaceholdersCount","axios","get","getImageURLs","then","_ref","addImageURLs","withRouter","inject","_ref2","appState","observer","location","react_default","a","createElement","className","href","label","path","size","map","item","key","pathname","Link","to","FavouritesIndicatorStyled","styled","div","_templateObject","FavouritesIndicator","isFavourite","role","aria-label","FavouritesButtonStyled","button","FavouritesButton_templateObject","FavouritesButton","visible","type","ImageItemStyled","ImageItem_templateObject","loadingGif","ImageItem","_Component","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onImageLoad","target","setState","isImageLoaded","imageHeight","clientHeight","onMouseOver","mouseOver","onMouseOut","addCurrentImageToFavourites","addToFavourites","image","removeCurrentImageFromFavourites","removeFromFavourites","state","inherits","createClass","value","_this$props","_this$state","includes","style","height","onClick","alt","src","decoding","onLoad","FavouritesButton_FavouritesButton","FavouritesIndicator_FavouritesIndicator","Component","placeholderHeightGenerator","results","next","Math","floor","random","ImageListStyled","ul","ImageList_templateObject","ImageList","list","columnWidth","i","Gallery_ImageItem_ImageItem","GalleryTitle","title","PhotosViewStyled","Gallery_templateObject","Gallery","getMinColumnHeight","columns","listContainerRef","current","childNodes","minHeight","Infinity","min","onScroll","scroll","window","pageYOffset","documentElement","scrollTop","innerHeight","requestMoreImages","onResize","containerWidth","clientWidth","columnsCount","createRef","initialized","actualColumnWidth","addEventListener","setupResizeHandlers","infinite","setupScrollHandlers","removeEventListener","images","imagesByColumn","List","Range","_","forEach","elem","GalleryTitle_GalleryTitle","ref","ImageList_ImageList","Gallery_Gallery","toJS","AppStyled","App_templateObject","App","index_module","components_NavBar","Switch","Route","exact","component","NewPhotosView","FavouritesView","Boolean","hostname","ReactDOM","render","BrowserRouter","basename","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44dc6614.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.e404159f.gif\";","export const MIN_LIST_WIDTH = 300;\nexport const LIST_MARGIN = 6;\nexport const MIN_COLUMN_WIDTH = MIN_LIST_WIDTH + 2 * LIST_MARGIN;\nexport const BATCH_SIZE = 12;","import { observable, action, computed } from 'mobx';\nimport { Set } from 'immutable';\nimport { getImageURLs } from './api/shibeAPI';\nimport {\n  storeFavouritesCookie,\n  readFavouritesCookie,\n} from './utils/cookieUtil';\nimport { BATCH_SIZE } from './global/constants';\nclass AppState {\n  @observable imageURLs = [];\n  @observable placeholdersCount = 0;\n\n  @observable favourites = new Set(readFavouritesCookie());\n\n  @action\n  setImageURLs = imageURLs => {\n    this.imageURLs.replace(imageURLs);\n  };\n\n  @action addImageURLs = imageURLs => {\n    this.imageURLs.push(...imageURLs);\n  };\n\n  @action setPlaceholdersCount = placeholdersCount => {\n    this.placeholdersCount = placeholdersCount;\n  };\n\n  @action setFavourites = favourites => {\n    this.favourites = favourites;\n    storeFavouritesCookie(favourites);\n  };\n  @action addToFavourites = favourite => {\n    this.setFavourites(this.favourites.add(favourite));\n  };\n\n  @action removeFromFavourites = favourite => {\n    this.setFavourites(this.favourites.delete(favourite));\n  };\n\n  @computed get images() {\n    return [\n      ...this.imageURLs,\n      ...(new Array(this.placeholdersCount)).fill(''),\n    ];\n  }\n\n  @action\n  requestMoreImages = (count = BATCH_SIZE) => {\n    this.setPlaceholdersCount(this.placeholdersCount + count);\n    getImageURLs(count).then(({ data }) => {\n      this.setPlaceholdersCount(this.placeholdersCount - count);\n      this.addImageURLs(data);\n    });\n  };\n}\n\nexport { AppState };\n","export const readFavouritesCookie = () => {\n    const match = document.cookie.match(/shibe-dogs-elite=([^;]*)/);\n    if (match !== null && match.length > 0) {\n        return JSON.parse(match[1]);\n    }\n    return [];\n}\nexport const storeFavouritesCookie = data => document.cookie = `shibe-dogs-elite=${JSON.stringify(data)}`;","import axios from 'axios';\nexport const getImageURLs = count => axios.get(`https://cors.io/?https://shibe.online/api/shibes?count=${count}`);","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nexport const NavBar = ({ location, favourites }) => (\n  <nav className=\"navbar sticky-top navbar-light bg-light navbar-expand\">\n    <a className=\"navbar-brand\" href=\"/\">\n      Infinite Scroll\n    </a>\n    <div className=\"collapse navbar-collapse\">\n      <ul className=\"navbar-nav\">\n        {[\n          { label: 'New Photos', path: '/' },\n          { label: `Favourites (${favourites.size})`, path: '/favourites' },\n        ].map(item => (\n          <li\n            key={item.label}\n            className={`nav-item ${location.pathname === item.path &&\n              'active'}`}\n          >\n            <Link className=\"nav-link\" to={item.path}>\n              {item.label}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default withRouter(\n  inject(({ appState }) => ({\n    favourites: appState.favourites,\n  }))(observer(NavBar))\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst FavouritesIndicatorStyled = styled.div`\n  position: absolute;\n  bottom: 12px;\n  right: 12px;\n\n  font-size: 36px;\n\n  transition: opacity 0.2s;\n\n  &.favourites-indicator--hidden {\n    opacity: 0;\n  }\n`;\nexport const FavouritesIndicator = ({ isFavourite }) => (\n  <FavouritesIndicatorStyled\n    className={`favourites-indicator ${!isFavourite &&\n      'favourites-indicator--hidden'}`}\n  >\n    <span role=\"img\" aria-label=\"favourite\">\n      ❤️\n    </span>\n  </FavouritesIndicatorStyled>\n);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst FavouritesButtonStyled = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 120px;\n  height: 120px;\n  padding-top: 12px;\n  font-size: 64px;\n\n  &.btn--hidden {\n    opacity: 0;\n  }\n`;\n\nexport const FavouritesButton = ({ visible, isFavourite }) => (\n  <FavouritesButtonStyled\n    className={`btn btn-light ${!visible && 'btn--hidden'}`}\n    type=\"button\"\n  >\n    {isFavourite ? '💔' : '❤️'}\n  </FavouritesButtonStyled>\n);\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport styled from '@emotion/styled';\nimport { FavouritesIndicator } from './FavouritesIndicator';\nimport { FavouritesButton } from './FavouritesButton';\nimport { LIST_MARGIN } from '../../../global/constants';\nimport loadingGif from '../../../assets/loading.gif';\n\nconst ImageItemStyled = styled.div`\n  position: relative;\n  width: 100%;\n  margin: ${LIST_MARGIN}px 0;\n  transition: height 0.2s;\n\n  cursor: pointer;\n\n  background-image: url(${loadingGif});\n  background-color: lightgray;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-blend-mode: multiply;\n\n  .image {\n    width: 100%;\n    opacity: 0;\n    position: absolute;\n  }\n\n  .image--loaded {\n    opacity: 1;\n    transition: opacity 0.5s;\n  }\n`;\n\nexport class ImageItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isImageLoaded: false,\n      mouseOver: false,\n      imageHeight: 0,\n    };\n  }\n  onImageLoad = ({ target }) => {\n    this.setState({ isImageLoaded: true, imageHeight: target.clientHeight });\n  };\n\n  onMouseOver = () => {\n    this.setState({ mouseOver: true });\n  };\n\n  onMouseOut = () => {\n    this.setState({\n      mouseOver: false,\n    });\n  };\n\n  addCurrentImageToFavourites = () => {\n    this.props.addToFavourites(this.props.image);\n    this.setState({ mouseOver: false });\n  };\n\n  removeCurrentImageFromFavourites = () => {\n    this.props.removeFromFavourites(this.props.image);\n    this.setState({ mouseOver: false });\n  };\n\n  render() {\n    const { image, favourites } = this.props;\n    const { mouseOver, isImageLoaded, imageHeight } = this.state;\n    const isFavourite = favourites.includes(this.props.image);\n    return (\n      <ImageItemStyled\n        onMouseOver={this.onMouseOver}\n        onMouseOut={this.onMouseOut}\n        style={{ height: imageHeight || this.props.height }}\n        onClick={\n          isFavourite\n            ? this.removeCurrentImageFromFavourites\n            : this.addCurrentImageToFavourites\n        }\n      >\n        {image && (\n          <img\n            className={`image ${isImageLoaded && 'image--loaded'}`}\n            alt=\"Shibe dog\"\n            src={image}\n            decoding=\"async\"\n            onLoad={this.onImageLoad}\n          />\n        )}\n        <FavouritesButton visible={mouseOver} isFavourite={isFavourite} />\n        <FavouritesIndicator isFavourite={isFavourite} />\n      </ImageItemStyled>\n    );\n  }\n}\n\nexport default inject(({ appState }) => ({\n  favourites: appState.favourites,\n  addToFavourites: appState.addToFavourites,\n  removeFromFavourites: appState.removeFromFavourites,\n}))(observer(ImageItem));\n","export const placeholderHeightGenerator = (() => {\n  const results = [0.75, 1, 1, 1.33];\n  return {\n    next: () => results[Math.floor(Math.random() * 4)],\n  };\n})();\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport ImageItem from './ImageItem/ImageItem';\nimport { placeholderHeightGenerator } from '../../utils/placeholderHeightGenerator';\nimport { LIST_MARGIN } from '../../global/constants';\n\nconst ImageListStyled = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    flex-basis: 50%;\n    padding: 0;\n    margin: 0 ${LIST_MARGIN}px;\n`;\nexport class ImageList extends Component {\n  render() {\n    const { list, columnWidth } = this.props;\n    return (\n      <ImageListStyled className=\"image-list\">\n        {list.map((image, i) => (\n          <li\n            className=\"image-list--item\"\n            key={`${image || 'placeholder'}-${i}`}\n          >\n            <ImageItem\n              image={image}\n              height={placeholderHeightGenerator.next() * columnWidth}\n            />\n          </li>\n        ))}\n      </ImageListStyled>\n    );\n  }\n}\n","import React from 'react';\n\nexport const GalleryTitle = ({ title }) => (\n  <div className=\"row\">\n    <div className=\"col\">\n      <h1>{title}</h1>\n    </div>\n  </div>\n);\n","import React, { Component, createRef } from 'react';\nimport { List, Range } from 'immutable';\nimport styled from '@emotion/styled';\nimport { ImageList } from './ImageList';\nimport { GalleryTitle } from './GalleryTitle';\nimport { LIST_MARGIN, MIN_COLUMN_WIDTH } from '../../global/constants';\n\nconst PhotosViewStyled = styled.div`\n  .image-list-container {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n  }\n`;\n\nexport class Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.listContainerRef = createRef();\n    this.state = {\n      initialized: false,\n      columnsCount: 0,\n      actualColumnWidth: 0,\n    };\n  }\n\n  getMinColumnHeight = () => {\n    const columns = this.listContainerRef.current.childNodes;\n    let minHeight = Infinity;\n    if (columns && columns.length > 0) {\n      for (let i = 0; i < columns.length; i++) {\n        minHeight = Math.min(minHeight, columns[i].clientHeight);\n      }\n    } else {\n      minHeight = 0;\n    }\n    return minHeight;\n  };\n\n  onScroll = () => {\n    const scroll = window.pageYOffset || document.documentElement.scrollTop;\n    this.getMinColumnHeight() < window.innerHeight + scroll &&\n      this.props.requestMoreImages();\n  };\n\n  onResize = () => {\n    const containerWidth = this.listContainerRef.current.clientWidth;\n    const columnsCount = Math.floor(containerWidth / MIN_COLUMN_WIDTH);\n    const columnWidth = containerWidth / columnsCount - 2 * LIST_MARGIN;\n    this.setState({\n      columnsCount,\n      columnWidth,\n    });\n  };\n\n  setupResizeHandlers() {\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n  }\n\n  setupScrollHandlers() {\n    window.addEventListener('scroll', this.onScroll);\n    this.onScroll();\n  }\n\n  componentDidMount() {\n    if (!this.state.initialized) {\n      this.setupResizeHandlers();\n      this.props.infinite && this.setupScrollHandlers();\n      this.setState({ initialized: true });\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n    this.props.infinite && window.removeEventListener('scroll', this.onScroll);\n  }\n\n  render() {\n    const { columnsCount, columnWidth } = this.state;\n    const { images, title } = this.props;\n    const imagesByColumn = List(Range(0, columnsCount).map(_ => []));\n\n    if (columnsCount && columnWidth) {\n      images.forEach((elem, i) => {\n        imagesByColumn.get(i % columnsCount).push(elem);\n      });\n    }\n\n    return (\n      <PhotosViewStyled>\n        <GalleryTitle title={title} />\n        <div className=\"row\">\n          <div className=\"col image-list-container\" ref={this.listContainerRef}>\n            {imagesByColumn.map((list, i) => (\n              <ImageList\n                key={`list-${i}-of-${columnsCount}`}\n                list={list}\n                columnWidth={columnWidth}\n              />\n            ))}\n          </div>\n        </div>\n      </PhotosViewStyled>\n    );\n  }\n}\n","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Gallery } from './Gallery/Gallery';\n\nexport const NewPhotosView = ({ images, requestMoreImages }) => (\n  <Gallery\n    infinite\n    title=\"New Photos\"\n    images={images}\n    requestMoreImages={requestMoreImages}\n  />\n);\n\nexport default inject(({ appState }) => ({\n  images: appState.images,\n  requestMoreImages: appState.requestMoreImages,\n}))(observer(NewPhotosView));\n","import React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { Gallery } from './Gallery/Gallery';\n\nexport const FavouritesView = ({ favourites }) => (\n  <Gallery title=\"Favourites\" images={favourites.toJS()} />\n);\n\nexport default inject(({ appState }) => ({\n  favourites: appState.favourites,\n}))(observer(FavouritesView));\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport styled from '@emotion/styled';\nimport { AppState } from './AppState';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport NewPhotosView from './components/NewPhotosView';\nimport FavouritesView from './components/FavouritesView';\n\nconst AppStyled = styled.div`\n  .main {\n    padding-top: 56px;\n  }\n`;\n\nconst appState = new AppState();\n\nexport const App = () => (\n  <Provider appState={appState}>\n    <AppStyled className=\"App\">\n      <NavBar />\n      <div className=\"main container\">\n        <Switch>\n          <Route exact path=\"/\" component={NewPhotosView} />\n          <Route exact path=\"/favourites\" component={FavouritesView} />\n        </Switch>\n      </div>\n    </AppStyled>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/infinite-scroll\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}